<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hu.ssm.dao.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.hu.ssm.bean.Employee">
    <id column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="d_id" jdbcType="INTEGER" property="dId" />
  </resultMap>
  
  <resultMap id="EmpDeptResultMap" type="com.hu.ssm.bean.Employee">
    <id column="emp_id" jdbcType="INTEGER" property="empId" />
    <result column="emp_name" jdbcType="VARCHAR" property="empName" />
    <result column="gender" jdbcType="CHAR" property="gender" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="d_id" jdbcType="INTEGER" property="dId" />
    <association property="department" javaType="com.hu.ssm.bean.Department">
        <id property="deptId" column="dept_id"/>
        <result property="deptName" column="dept_name"/>
    </association>
  </resultMap>
  
  <select id="selectCountByName" resultType="java.lang.Integer" >
    select count(*) from tl_emp where emp_name = #{empName}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tl_emp
    where emp_id = #{empId,jdbcType=INTEGER}
  </delete>
  
  <delete id="deleteBatchByPrimaryKeys" >
    delete from tl_emp where emp_id in
    <foreach collection="list" item="id" open="(" close=")" separator=",">
        #{id}
    </foreach>
  </delete>
  <insert id="insert" parameterType="com.hu.ssm.bean.Employee">
    insert into tl_emp (emp_name, gender, 
      email, d_id)
    values ( #{empName,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, 
      #{email,jdbcType=VARCHAR}, #{dId,jdbcType=INTEGER})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.hu.ssm.bean.Employee">
    update tl_emp
    <set>
        <if test="empName != null" >
                emp_name = #{empName,jdbcType=VARCHAR},
         </if>
         <if test="gender != null" >
                gender = #{gender,jdbcType=CHAR},
         </if>
         <if test="email != null" >
                email = #{email,jdbcType=VARCHAR},
         </if>
         <if test="dId != null" >
               d_id = #{dId,jdbcType=INTEGER}
         </if>
    </set>
    where emp_id = #{empId,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select emp_id, emp_name, gender, email, d_id
    from tl_emp
    where emp_id = #{empId,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select emp_id, emp_name, gender, email, d_id
    from tl_emp
  </select>
  
  <!-- List<Employee> selectAllWithDept(Employee example); -->
    <select id="selectAllWithDept" resultMap="EmpDeptResultMap">
        select e.emp_id, e.emp_name, e.gender, e.email, e.d_id ,d.dept_id,d.dept_name 
        from tl_emp e LEFT JOIN tl_dept d on e.d_id =d.dept_id
    </select>
  <!-- Employee selectByPrimaryKeyWithDept(Integer empId); -->
  <select id="selectByPrimaryKeyWithDept" resultMap="EmpDeptResultMap">
    select e.emp_id, e.emp_name, e.gender, e.email, e.d_id ,d.dept_id,d.dept_name 
        from tl_emp e LEFT JOIN tl_dept d on e.d_id =d.dept_id 
        where emp_id = #{empId,jdbcType=INTEGER}
   </select>
</mapper>